# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-10-01 23:06
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlockedProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='BlockedUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='BoughtProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CreditCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=15)),
                ('company', models.IntegerField(choices=[(1, 'The Haunting Bridesmaid'), (2, 'The Sniveling Child'), (3, 'The Torment Spirit'), (4, 'The Depraved Gal'), (5, 'The Ringing Soul')])),
                ('valid_date', models.DateField()),
                ('security_code', models.CharField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='DevilUser',
            fields=[
                ('username', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('user_mail', models.EmailField(max_length=254)),
                ('user_type', models.IntegerField(choices=[(1, 'normal'), (2, 'admin')])),
                ('user_description', models.TextField()),
                ('user_status', models.IntegerField(choices=[(1, 'nonblocked'), (2, 'blocked')])),
                ('last_online', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ship_method', models.IntegerField(choices=[(1, 'Banshee Carrier'), (2, 'Underground Worm'), (3, 'Frost Dragon'), (4, 'Succubus')])),
                ('pay_method', models.IntegerField(choices=[(1, 'Auction'), (2, 'Buy now')])),
                ('main_picture', models.CharField(max_length=50)),
                ('product_descrition', models.TextField()),
                ('valid_date', models.DateField()),
                ('product_status', models.IntegerField(choices=[(1, 'nonblocked'), (2, 'blocked')])),
                ('current_value', models.IntegerField()),
                ('publish_date', models.DateField()),
                ('username', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_user', to='profiler.DevilUser', verbose_name='User of product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAuctionValueStamp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('date', models.DateField(auto_now=True)),
                ('bider', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pavs_buyer', to='profiler.DevilUser', verbose_name='Buyer')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pavs_good', to='profiler.Product', verbose_name='Good')),
            ],
        ),
        migrations.CreateModel(
            name='ProductBuyNowValueStamp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('date', models.DateField(auto_now=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pbnvs_good', to='profiler.Product', verbose_name='Good')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCalification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField()),
                ('comment', models.TextField()),
                ('origin_username', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_calification_origin_user', to='profiler.DevilUser', verbose_name='Origin User')),
                ('target_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_calification_target_user', to='profiler.Product', verbose_name='Target User')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True)),
                ('pay_method', models.IntegerField(choices=[(1, 'Auction'), (2, 'Buy now')])),
                ('ship_method', models.IntegerField(choices=[(1, 'Banshee Carrier'), (2, 'Underground Worm'), (3, 'Frost Dragon'), (4, 'Succubus')])),
            ],
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nation', models.IntegerField(choices=[(1, 'Bepluegro'), (2, 'Qupraitho'), (3, 'Kotrijan'), (4, 'Oscya'), (5, 'Cheyyae'), (6, 'Straunia'), (7, 'Aswain'), (8, 'Ashain'), (9, 'Floal Wharia'), (10, 'Broir Smea'), (11, 'The Thundering Wall'), (12, 'The Sunken Ship Cliff'), (13, 'The Tradepost Wall'), (14, 'The Ancient Ravine'), (15, 'The Silent Cliffs'), (16, 'The Raging Canyon')])),
                ('direction', models.TextField()),
                ('messager', models.IntegerField()),
                ('username', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_address_user', to='profiler.DevilUser', verbose_name='User of Address')),
            ],
        ),
        migrations.CreateModel(
            name='UserCalification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField()),
                ('comment', models.TextField()),
                ('origin_username', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_calification_origin_user', to='profiler.DevilUser', verbose_name='Origin User')),
                ('target_username', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_calification_target_user', to='profiler.DevilUser', verbose_name='Target User')),
            ],
        ),
        migrations.AddField(
            model_name='ticket',
            name='bill_address',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticket_bill_address', to='profiler.UserAddress', verbose_name='Billing Address'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='bill_card',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticket_credit_card', to='profiler.CreditCard', verbose_name='Credit Card'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticket_buyer', to='profiler.DevilUser', verbose_name='Buyer'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='ship_address',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticket_ship_address', to='profiler.UserAddress', verbose_name='Shipping Address'),
        ),
        migrations.AddField(
            model_name='productcategory',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_category_category', to='profiler.Ticket', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='productcategory',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_category_good', to='profiler.Product', verbose_name='Good'),
        ),
        migrations.AddField(
            model_name='creditcard',
            name='username',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='credit_card_user', to='profiler.DevilUser', verbose_name='User of credit card'),
        ),
        migrations.AddField(
            model_name='boughtproduct',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bought_product_good', to='profiler.Product', verbose_name='Good'),
        ),
        migrations.AddField(
            model_name='boughtproduct',
            name='ticket',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bought_product_ticket', to='profiler.Ticket', verbose_name='Buy Ticket'),
        ),
        migrations.AddField(
            model_name='boughtproduct',
            name='username',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bought_product_buyer', to='profiler.DevilUser', verbose_name='Buyer'),
        ),
        migrations.AddField(
            model_name='blockeduser',
            name='origin_username',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blocked_user_origin_user', to='profiler.DevilUser', verbose_name='Origin User'),
        ),
        migrations.AddField(
            model_name='blockeduser',
            name='target_username',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blocked_user_target_user', to='profiler.DevilUser', verbose_name='Target User'),
        ),
        migrations.AddField(
            model_name='blockedproduct',
            name='origin_username',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blocked_product_origin_user', to='profiler.DevilUser', verbose_name='Origin User'),
        ),
        migrations.AddField(
            model_name='blockedproduct',
            name='target_product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blocked_product_target_product', to='profiler.Product', verbose_name='Target User'),
        ),
    ]
